variable "tags" {
  description = "Standard tags. Typically generated by fogg"
  type = object({
    env : string,
    owner : string,
    project : string,
    service : string,
    managedBy : string,
  })
}

variable "eks_cluster" {
  type = object({
    cluster_id : string,
    cluster_arn : string,
    cluster_endpoint : string,
    cluster_ca : string,
    cluster_oidc_issuer_url : string,
    cluster_version : string,
    worker_iam_role_name : string,
    worker_security_group : string,
    oidc_provider_arn : string,
  })
  description = "EKS cluster information"
}

variable "k8s_core_namespace" {
  description = "Kubernetes namespace to install all the core utilities into."
  default     = "k8s-core"
  type        = string
}

variable "default_namespace" {
  description = "Kubernetes namespace for project to use. If blank, uses PROJECT-ENV pattern."
  default     = ""
  type        = string
}

variable "iam_role_path" {
  type        = string
  description = "IAM Path for the IAM role created for the service. If omitted, defaults to /{eks_cluster_id}-k8s-core/"
  default     = ""
}

variable "require_network_policies" {
  description = "Require network policies to enable pod communication."
  default     = "true"
  type        = string
}

variable "additional_addons" {
  type = object({
    kiam : optional(bool, false)
    nginx_ingress : optional(object({
      enabled   = optional(bool, false)
      namespace = optional(string, "nginx-encrypted-ingress")
      version   = optional(string, "4.7.0")
    }), {})
    linkerd : optional(object({ // How to configure: https://czi.atlassian.net/wiki/spaces/SECENG/pages/2743631992/Linkerd+End+to+End+Encryption+and+Service+Level+Authorization+for+Happy+EKS+services
      enabled                     = optional(bool, false)
      crd_version                 = optional(string, "1.6.1")
      control_plane_version       = optional(string, "1.12.7")
      tls_private_cert_param_path = optional(string, "")
      tls_private_key_param_path  = optional(string, "")
    }), {})
    datadog : optional(object({
      api_key              = string
      agent_tag            = optional(string, "7.53.0")
      mute                 = optional(bool, false)
      ops_genie_owner_team = string
      }), {
      api_key              = ""
      mute                 = true
      ops_genie_owner_team = ""
    })
    rancher : optional(object(
      {
        enabled           = optional(bool, true)
        provisioner_image = optional(string, "rancher/hyperkube:v1.26.4-rancher2")
        cluster_monitoring = optional(object({
          enabled       = optional(bool, true)
          chart_version = optional(string, "102.0.3+up40.1.2")
        }), {})
      }
    ), {})
    nvidia-device-plugin : optional(object(
      {
        enabled       = optional(bool, false)
        chart_version = optional(string, "0.14.1")
      }
    ), {})
  })
  description = "An object of additional optional addons for this cluster"
  default     = {}
}
